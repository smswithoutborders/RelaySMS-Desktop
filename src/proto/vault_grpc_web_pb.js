/**
 * @fileoverview gRPC-Web generated client stub for vault.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.14.0
// source: vault.proto

/* eslint-disable */
// @ts-nocheck

const grpc = {};
grpc.web = require("grpc-web");

const proto = {};
proto.vault = {};
proto.vault.v1 = require("./vault_pb.js");

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.vault.v1.EntityClient = function (hostname, credentials, options) {
  if (!options) options = {};
  options.format = "text";

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, "");
};

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.vault.v1.EntityPromiseClient = function (hostname, credentials, options) {
  if (!options) options = {};
  options.format = "text";

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, "");
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.vault.v1.CreateEntityRequest,
 *   !proto.vault.v1.CreateEntityResponse>}
 */
const methodDescriptor_Entity_CreateEntity = new grpc.web.MethodDescriptor(
  "/vault.v1.Entity/CreateEntity",
  grpc.web.MethodType.UNARY,
  proto.vault.v1.CreateEntityRequest,
  proto.vault.v1.CreateEntityResponse,
  /**
   * @param {!proto.vault.v1.CreateEntityRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.vault.v1.CreateEntityResponse.deserializeBinary
);

/**
 * @param {!proto.vault.v1.CreateEntityRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.vault.v1.CreateEntityResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.vault.v1.CreateEntityResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.vault.v1.EntityClient.prototype.createEntity = function (
  request,
  metadata,
  callback
) {
  return this.client_.rpcCall(
    this.hostname_ + "/vault.v1.Entity/CreateEntity",
    request,
    metadata || {},
    methodDescriptor_Entity_CreateEntity,
    callback
  );
};

/**
 * @param {!proto.vault.v1.CreateEntityRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.vault.v1.CreateEntityResponse>}
 *     Promise that resolves to the response
 */
proto.vault.v1.EntityPromiseClient.prototype.createEntity = function (
  request,
  metadata
) {
  return this.client_.unaryCall(
    this.hostname_ + "/vault.v1.Entity/CreateEntity",
    request,
    metadata || {},
    methodDescriptor_Entity_CreateEntity
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.vault.v1.AuthenticateEntityRequest,
 *   !proto.vault.v1.AuthenticateEntityResponse>}
 */
const methodDescriptor_Entity_AuthenticateEntity =
  new grpc.web.MethodDescriptor(
    "/vault.v1.Entity/AuthenticateEntity",
    grpc.web.MethodType.UNARY,
    proto.vault.v1.AuthenticateEntityRequest,
    proto.vault.v1.AuthenticateEntityResponse,
    /**
     * @param {!proto.vault.v1.AuthenticateEntityRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.vault.v1.AuthenticateEntityResponse.deserializeBinary
  );

/**
 * @param {!proto.vault.v1.AuthenticateEntityRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.vault.v1.AuthenticateEntityResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.vault.v1.AuthenticateEntityResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.vault.v1.EntityClient.prototype.authenticateEntity = function (
  request,
  metadata,
  callback
) {
  return this.client_.rpcCall(
    this.hostname_ + "/vault.v1.Entity/AuthenticateEntity",
    request,
    metadata || {},
    methodDescriptor_Entity_AuthenticateEntity,
    callback
  );
};

/**
 * @param {!proto.vault.v1.AuthenticateEntityRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.vault.v1.AuthenticateEntityResponse>}
 *     Promise that resolves to the response
 */
proto.vault.v1.EntityPromiseClient.prototype.authenticateEntity = function (
  request,
  metadata
) {
  return this.client_.unaryCall(
    this.hostname_ + "/vault.v1.Entity/AuthenticateEntity",
    request,
    metadata || {},
    methodDescriptor_Entity_AuthenticateEntity
  );
};

module.exports = proto.vault.v1;
